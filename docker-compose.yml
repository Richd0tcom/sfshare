services:

  backend:
    build: ./backend
    ports:
      - "7322:7322"
    depends_on:
      postgg:
        condition: service_healthy
    environment:
      - DB_URI=postgresql://root:Madara123@postgg:5432/filesharing
      - PORT=7322
      - DB_HOST=postgg
      - DB_PORT=5432
      - DB_NAME=filesharing
      - DB_USER=root
      - DB_PASSWORD=Madara123
      - JWT_SECRET=your_jwt_secret
      - APP_NAME=sfshare
      - APP_ENV=development
      - ENCRYPT_FILES=true
    volumes:
      - ./backend:/app # For development, enable hot-reloading
      - /app/node_modules # Exclude node_modules from host volume
    command: /bin/sh -c "sleep 50 && pnpm run migrateup && pnpm run start:dev"
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - VITE_BASE_URL=http://backend:7322
    volumes:
      - ./frontend:/app # For development
      - /app/node_modules # Exclude node_modules from host volume
  postgg:
    image: postgres:17-alpine
    container_name: postgres_db_other2
    environment:
      - POSTGRES_PASSWORD=Madara123
      - POSTGRES_USER=root
    ports:
      - "5433:5432"
    volumes:
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
      - postgres_data2:/var/lib/postgresql/data
      # - /init-postgres.sql:docker-entrypoint-initdb.d/init-postgres.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-filesharing}"]
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 10s


volumes:
  postgres_data2: